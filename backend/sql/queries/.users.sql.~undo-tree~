(undo-tree-save-format-version . 1)
"385628ea635bfbf50b12559adb4d008167b38017"
[nil nil nil nil (25937 8794 372505 358000) 0 nil]
([nil nil ((1 . 7) (t . -1)) nil (25937 8794 372503 825000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1) (undo-tree-id43 . -1) (#("N" 0 1 (fontified t face font-lock-keyword-face)) . -2) (undo-tree-id44 . -1) (#("S" 0 1 (fontified t)) . -3) (undo-tree-id45 . -1) (#("E" 0 1 (fontified t)) . -4) (undo-tree-id46 . -1) (#("R" 0 1 (fontified t)) . -5) (undo-tree-id47 . -1) (#("T" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -6) (undo-tree-id48 . -1) 7) nil (25937 8794 372501 701000) 0 nil])
([nil nil ((1 . 8)) nil (25937 8794 372496 812000) 0 nil])
([nil nil ((8 . 13)) nil (25937 8794 372496 90000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -19) (19 . 20) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -19) (19 . 20) (13 . 20)) nil (25937 8794 372494 638000) 0 nil])
([nil nil ((19 . 21)) nil (25937 8794 372492 233000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . -20) (undo-tree-id42 . -1) 21) nil (25937 8794 372490 309000) 0 nil])
([nil nil ((20 . 36)) nil (25937 8794 372488 626000) 0 nil])
([nil nil ((36 . 51)) nil (25937 8794 372487 835000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -47) (undo-tree-id38 . -1) (#("s" 0 1 (fontified t)) . -48) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t)) . -49) (undo-tree-id40 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -50) (undo-tree-id41 . -1) 51) nil (25937 8794 372486 482000) 0 nil])
([nil nil ((47 . 53)) nil (25937 8794 372124 494000) 0 nil])
([nil nil ((53 . 61)) nil (25937 8794 372123 853000) 0 nil])
([nil nil ((62 . 63)) nil (25937 8794 372122 771000) 0 nil])
([nil nil ((63 . 65) (#("   " 0 3 (fontified nil)) . 62) (undo-tree-id37 . -1) (63 . 65) (63 . 64)) nil (25937 8794 372121 619000) 0 nil])
([nil nil ((65 . 71)) nil (25937 8794 372119 645000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -68) (undo-tree-id34 . -1) (#("U" 0 1 (fontified t)) . -69) (undo-tree-id35 . -1) (#("S" 0 1 (fontified t)) . -70) (undo-tree-id36 . -1) 71) nil (25937 8794 372118 302000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -73) (73 . 74) (#(")" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -73) (73 . 74) (68 . 74)) nil (25937 8794 372114 445000) 0 nil])
([nil nil ((73 . 75)) nil (25937 8794 372113 293000) 0 nil])
([nil nil ((75 . 91)) nil (25937 8794 372112 712000) 0 nil])
([nil nil ((93 . 95) (#(" " 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . 92) (92 . 93) (92 . 93)) nil (25937 8794 372111 599000) 0 nil])
([nil nil ((95 . 105)) nil (25937 8794 372109 816000) 0 nil])
([nil nil ((105 . 107)) nil (25937 8794 372108 674000) 0 nil])
([nil nil ((3 . 5) (#("    " 0 4 (fontified nil)) . 2) (undo-tree-id33 . -2) (4 . 6) (2 . 5) (#("  " 0 2 (fontified nil)) . 1) (1 . 3) (1 . 2)) nil (25937 8794 372107 211000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id32 . -1) 2) nil (25937 8794 372104 897000) 0 nil])
([nil nil ((1 . 15)) nil (25937 8794 372103 163000) 0 nil])
([nil nil ((9 . 10)) nil (25937 8794 372102 292000) 0 nil])
([nil nil ((16 . 20)) nil (25937 8794 372101 951000) 0 nil])
([nil nil ((131 . 133) (#("    " 0 4 (fontified nil)) . 130) (undo-tree-id31 . -2) (132 . 134) (130 . 133) (#("  " 0 2 (fontified nil face tree-sitter-hl-face:punctuation\.delimiter)) . 129) (129 . 131) (129 . 130)) nil (25937 8794 372101 230000) 0 nil])
([nil nil ((133 . 135)) nil (25937 8794 372100 198000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -131) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -132) (undo-tree-id30 . -1) 133) nil (25937 8794 372099 136000) 0 nil])
([nil nil ((20 . 25)) nil (25937 8794 372097 643000) 0 nil])
([nil nil ((138 . 143)) nil (25937 8794 372097 212000) 0 nil])
([nil nil ((143 . 155)) nil (25937 8794 372096 471000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -136) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("-" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -137) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -138) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -139) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -140) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -141) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -142) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(":" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -143) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -144) (undo-tree-id18 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -145) (undo-tree-id19 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -146) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -147) (undo-tree-id21 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -148) (undo-tree-id22 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -149) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -150) (undo-tree-id24 . -1) (#("U" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -151) (undo-tree-id25 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -152) (undo-tree-id26 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -153) (undo-tree-id27 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -154) (undo-tree-id28 . -1) 155) nil (25937 8794 372091 611000) 0 nil])
([nil nil ((136 . 146)) nil (25937 8794 372072 716000) 0 nil])
([nil nil ((147 . 149) (#("  " 0 2 (fontified nil face tree-sitter-hl-face:comment)) . 146) (146 . 148) (146 . 147)) nil (25937 8794 372071 854000) 0 nil])
([nil nil ((149 . 160)) nil (25937 8794 372070 221000) 0 nil])
([nil nil ((160 . 181)) nil (25937 8794 372069 8000) 0 nil])
([nil nil ((181 . 182)) nil (25937 8794 372067 646000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . -181) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 182) nil (25937 8794 372066 383000) 0 nil])
([nil nil ((181 . 185)) nil (25937 8794 372029 393000) 0 nil])
([nil nil ((185 . 187)) nil (25937 8794 372028 562000) 0 nil])
([nil nil ((187 . 188)) nil (25937 8794 372027 930000) 0 nil])
([nil nil ((187 . 188) (t 25937 8792 39113 305000)) nil (25937 8794 372021 618000) 0 nil])
([nil nil ((190 . 192) (#("    " 0 4 (fontified nil)) . 189) (undo-tree-id75 . -2) (191 . 193) (189 . 192) (#(" " 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.delimiter)) . 188) (188 . 189) (188 . 189) (t 25937 8794 380163 242000)) nil (25937 8898 86308 477000) 0 nil])
([nil nil ((192 . 194)) nil (25937 8898 86306 443000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -190) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t)) . -191) (undo-tree-id74 . -1) 192) nil (25937 8898 86305 431000) 0 nil])
([nil nil ((139 . 145)) nil (25937 8898 86304 319000) 0 nil])
([nil nil ((152 . 161)) nil (25937 8898 86303 858000) 0 nil])
([nil nil ((207 . 213)) nil (25937 8898 86303 688000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -212) (undo-tree-id72 . -1) 213) nil (25937 8898 86302 987000) 0 nil])
([nil nil ((212 . 214)) nil (25937 8898 86301 915000) 0 nil])
([nil nil ((214 . 228)) nil (25937 8898 86300 933000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -223) (undo-tree-id67 . -1) (#("R" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -224) (undo-tree-id68 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -225) (undo-tree-id69 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -226) (undo-tree-id70 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -227) (undo-tree-id71 . -1) 228) nil (25937 8898 86299 460000) 0 nil])
([nil nil ((223 . 238)) nil (25937 8898 86294 691000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -235) (undo-tree-id64 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -236) (undo-tree-id65 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -237) (undo-tree-id66 . -1) 238) nil (25937 8898 86293 328000) 0 nil])
([nil nil ((235 . 241)) nil (25937 8898 86291 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -238) (undo-tree-id61 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -239) (undo-tree-id62 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -240) (undo-tree-id63 . -1) 241) nil (25937 8898 86290 42000) 0 nil])
([nil nil ((238 . 243)) nil (25937 8898 86287 477000) 0 nil])
([nil nil ((244 . 246) (#("  " 0 2 (fontified nil face tree-sitter-hl-face:comment)) . 243) (243 . 245) (243 . 244)) nil (25937 8898 86286 786000) 0 nil])
([nil nil ((246 . 254)) nil (25937 8898 86286 105000) 0 nil])
([nil nil ((254 . 275)) nil (25937 8898 86285 564000) 0 nil])
([nil nil ((275 . 280)) nil (25937 8898 86284 962000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . -279) (undo-tree-id60 . -1) 280) nil (25937 8898 86283 349000) 0 nil])
([nil nil ((279 . 293)) nil (25937 8898 86282 147000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -290) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("o" 0 1 (fontified t)) . -291) (undo-tree-id58 . -1) (#("d" 0 1 (fontified t)) . -292) (undo-tree-id59 . -1) 293) nil (25937 8898 86281 85000) 0 nil])
([nil nil ((290 . 294)) nil (25937 8898 86277 298000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -293) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 294) nil (25937 8898 86276 25000) 0 nil])
([nil nil ((293 . 294)) nil (25937 8898 86272 799000) 0 nil])
([nil nil ((294 . 297)) nil (25937 8898 86271 497000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -277) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 278) nil (25937 8898 86266 577000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -74) (undo-tree-id30 . -1) (#("a" 0 1 (fontified t)) . -75) (undo-tree-id31 . -1) (#("m" 0 1 (fontified t)) . -76) (undo-tree-id32 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -77) (undo-tree-id33 . -1) 78 (t 25938 25783 596275 947000)) nil (25938 32045 41242 422000) 0 nil])
([nil nil ((74 . 79)) nil (25938 32045 41236 897000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -191) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("s" 0 1 (fontified t)) . -192) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t)) . -193) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("r" 0 1 (fontified t)) . -194) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("_" 0 1 (fontified t)) . -195) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 196) nil (25938 32045 41232 776000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -268) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("a" 0 1 (fontified t)) . -269) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("m" 0 1 (fontified t)) . -270) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -271) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 272 (t 25938 32045 55340 969000)) nil (25938 32070 505396 604000) 0 nil])
([nil nil ((268 . 273)) nil (25938 32070 505067 462000) 0 nil])
([nil nil ((#("N" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -219) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -220) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("m" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -221) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -222) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 223) nil (25938 32070 505065 455000) 0 nil])
([nil nil ((219 . 224)) nil (25938 32070 505038 826000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -277) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("A" 0 1 (fontified t)) . -278) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("N" 0 1 (fontified t)) . -279) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("D" 0 1 (fontified t face font-lock-keyword-face)) . -280) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t)) . -281) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("p" 0 1 (fontified t)) . -282) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("a" 0 1 (fontified t)) . -283) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("s" 0 1 (fontified t)) . -284) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("s" 0 1 (fontified t)) . -285) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("w" 0 1 (fontified t)) . -286) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("o" 0 1 (fontified t)) . -287) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("r" 0 1 (fontified t)) . -288) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("d" 0 1 (fontified t)) . -289) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -290) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("$" 0 1 (fontified t)) . -291) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("2" 0 1 (fontified t)) . -292) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 293 (t 25938 32070 515403 222000)) nil (25939 49232 434970 206000) 0 nil])
([nil current ((#("A" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -224) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -225) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -226) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("P" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -227) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -228) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -229) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -230) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("w" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -231) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -232) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -233) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -234) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 235 (t 25939 49232 448016 994000)) nil (25939 49418 261154 750000) 0 nil])
nil
