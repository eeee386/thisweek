(undo-tree-save-format-version . 1)
"4a100a680d8423372c3d5b5f04207129e3d81a36"
[nil nil nil nil (25935 41792 253793 796000) 0 nil]
([nil nil ((nil rear-nonsticky nil 2 . 3) (#("
" 0 1 (fontified nil)) . -559) (1 . 560) (t 25935 40308 587901 767000)) nil (25935 41792 253791 953000) 0 nil])
([nil nil ((1 . 3)) nil (25935 41792 253790 89000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1) (undo-tree-id16 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -2) (undo-tree-id17 . -1) 3) nil (25935 41792 253788 537000) 0 nil])
([nil nil ((1 . 10)) nil (25935 41792 253785 731000) 0 nil])
([nil nil ((12 . 15) (#(")" 0 1 (fontified nil)) . -11) (11 . 12) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -11) (11 . 12) (10 . 12)) nil (25935 41792 253784 269000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -14) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -1) 15) nil (25935 41792 253782 325000) 0 nil])
([nil nil ((572 . 574)) nil (25935 41792 253779 79000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -573) (undo-tree-id12 . -1) (574 . 575) (#("}" 0 1 (fontified nil)) . -574) (574 . 575)) nil (25935 41792 253777 686000) 0 nil])
([nil nil ((1 . 3)) nil (25935 41792 253774 911000) 0 nil])
([nil nil ((1 . 8)) nil (25935 41792 253773 649000) 0 nil])
([nil nil ((apply yas--snippet-revive 1 13 #s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 0 nil nil nil nil)) (1 . 13) (#("package main" 0 12 (fontified nil)) . 1) (1 . 13) (#("package
" 0 7 (fontified nil) 7 8 (fontified nil)) . 1) (undo-tree-id9 . 1) (1 . 8) (#("package main" 0 12 (fontified nil)) . -1) (1 . 13) (#("package" 0 7 (fontified t face tree-sitter-hl-face:keyword)) . -1) (undo-tree-id10 . -7) (undo-tree-id11 . -7) 8) nil (25935 41792 253771 865000) 0 nil])
([nil nil ((13 . 14)) nil (25935 41792 253767 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14 . 15) (#("
" 0 1 (fontified nil)) . -84) (14 . 85)) nil (25935 41792 253766 395000) 0 nil])
([nil nil ((16 . 17)) nil (25935 41792 253765 233000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -16) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 17) nil (25935 41792 253763 780000) 0 nil])
([nil nil ((84 . 85)) nil (25935 41792 253706 3000) 0 nil])
([nil nil ((659 . 660)) nil (25935 41792 253699 661000) 0 nil])
([nil nil ((14 . 16) (t 25935 41792 261610 602000)) nil (25935 41910 236570 416000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -23) (23 . 24) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -23) (23 . 24) (15 . 24)) nil (25935 41910 236568 683000) 0 nil])
([nil nil ((24 . 25) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 24) (24 . 25) (23 . 25)) nil (25935 41910 236567 90000) 0 nil])
([nil nil ((25 . 27) (#("\"" 0 1 (fontified nil)) . -25) (25 . 26)) nil (25935 41910 236565 286000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -18) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t face (tree-sitter-hl-face:function\.call tree-sitter-hl-face:variable))) . -19) (undo-tree-id36 . -1) 20) nil (25935 41910 236563 803000) 0 nil])
([nil nil ((18 . 20)) nil (25935 41910 236561 229000) 0 nil])
([nil nil ((26 . 29)) nil (25935 41910 236560 608000) 0 nil])
([nil nil ((30 . 32)) nil (25935 41910 236559 776000) 0 nil])
([nil nil ((33 . 41) (32 . 34) (#("\"" 0 1 (fontified nil)) . -32) (32 . 33)) nil (25935 41910 236558 614000) 0 nil])
([nil nil ((apply yas--snippet-revive 33 42 #s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 1 nil nil nil nil)) (33 . 42) (#("database/" 0 9 (fontified nil)) . 33) (33 . 42) (#("database" 0 8 (fontified nil)) . 33) (33 . 41) (#("database/" 0 9 (fontified nil)) . -33) (33 . 42) (#("database" 0 8 (fontified t face tree-sitter-hl-face:string)) . -33) (undo-tree-id33 . -8) (undo-tree-id34 . -8) 41) nil (25935 41910 236556 99000) 0 nil])
([nil nil ((42 . 45)) nil (25935 41910 236551 841000) 0 nil])
([nil nil ((46 . 48)) nil (25935 41910 236551 30000) 0 nil])
([nil nil ((48 . 50) (#("\"" 0 1 (fontified nil)) . -48) (48 . 49)) nil (25935 41910 236550 148000) 0 nil])
([nil nil ((49 . 51)) nil (25935 41910 236548 866000) 0 nil])
([nil nil ((52 . 54)) nil (25935 41910 236547 724000) 0 nil])
([nil nil ((55 . 62) (54 . 56) (#("\"" 0 1 (fontified nil)) . -54) (54 . 55)) nil (25935 41910 236546 511000) 0 nil])
([nil nil ((apply yas--snippet-revive 55 66 #s(yas--snippet nil nil nil 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 2 nil nil nil nil)) (55 . 66) (#("github.com/" 0 11 (fontified nil)) . 55) (55 . 66) (#("github." 0 7 (fontified nil face tree-sitter-hl-face:string)) . 55) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (#("github.com/" 0 11 (fontified nil)) . -62) (62 . 73)) nil (25935 41910 236544 568000) 0 nil])
([nil nil ((66 . 78)) nil (25935 41910 236541 372000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:string)) . -77) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 78) nil (25935 41910 236540 159000) 0 nil])
([nil nil ((77 . 79)) nil (25935 41910 236535 621000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face tree-sitter-hl-face:string)) . -77) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("v" 0 1 (fontified t face tree-sitter-hl-face:string)) . -78) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 79) nil (25935 41910 236533 627000) 0 nil])
([nil nil ((77 . 79)) nil (25935 41910 236511 205000) 0 nil])
([nil nil ((80 . 82) (t 25935 41910 239945 613000)) nil (25935 42324 259808 993000) 0 nil])
([nil nil ((82 . 84) (#("\"" 0 1 (fontified nil)) . -82) (82 . 83)) nil (25935 42324 259807 931000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face tree-sitter-hl-face:string)) . -82) (undo-tree-id88 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . 83)) nil (25935 42324 259806 448000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -80) (undo-tree-id86 . -1) (#("	" 0 1 (fontified t)) . -81) (undo-tree-id87 . -1) 82) nil (25935 42324 259805 126000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -77) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("v" 0 1 (fontified t)) . -78) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("\"" 0 1 (fontified t face tree-sitter-hl-face:string)) . -79) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 80) nil (25935 42324 259802 731000) 0 nil])
([nil nil ((77 . 79)) nil (25935 42324 259798 944000) 0 nil])
([nil nil ((apply yas--snippet-revive 71 80 #s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 3 nil nil nil nil)) (71 . 80) (#("godotenv\"" 0 9 (fontified nil)) . 71) (71 . 80) (#("godotenv" 0 8 (fontified nil)) . 71) (71 . 79) (#("godotenv\"" 0 9 (fontified nil)) . -71) (71 . 80) (#("godotenv" 0 8 (fontified t)) . -71) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -6) 79) nil (25935 42324 259797 361000) 0 nil])
([nil nil ((80 . 82)) nil (25935 42324 259793 915000) 0 nil])
([nil nil ((82 . 83)) nil (25935 42324 259792 673000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84 . 85) (#("
" 0 1 (fontified nil)) . -230) (83 . 231) 82) nil (25935 42324 259791 320000) 0 nil])
([nil nil ((#("	p
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 81) (undo-tree-id64 . -2) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -2) (undo-tree-id70 . -3) (undo-tree-id71 . -2) (undo-tree-id72 . -3) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -3) 82) nil (25935 42324 259789 206000) 0 nil])
([nil nil ((#("	\"github.com/joho/godotenv\"
" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:string) 2 18 (fontified t face tree-sitter-hl-face:string) 18 27 (fontified t face tree-sitter-hl-face:string) 27 28 (fontified t)) . 53) (undo-tree-id37 . -27) (undo-tree-id38 . -28) (undo-tree-id39 . -1) (undo-tree-id40 . -18) (undo-tree-id41 . -28) (undo-tree-id42 . -28) (undo-tree-id43 . -28) (undo-tree-id44 . -28) (undo-tree-id45 . -28) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -27) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . 26) (undo-tree-id55 . -26) (undo-tree-id56 . -1) (undo-tree-id57 . -27) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -28) 54) nil (25935 42324 259777 515000) 0 nil])
([nil nil ((52 . 54) (t 25935 42324 359603 65000)) nil (25935 42365 609807 672000) 0 nil])
([nil nil ((55 . 63) (54 . 56) (#("\"" 0 1 (fontified nil)) . -54) (54 . 55)) nil (25935 42365 609799 797000) 0 nil])
([nil nil ((859 . 860) (#("	" 0 1 (fontified nil)) . 858) (undo-tree-id95 . -1) (857 . 860) (t 25935 42365 613811 525000)) nil (25935 42440 264073 273000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -859) (undo-tree-id94 . -1) 860) nil (25935 42440 263998 274000) 0 nil])
([nil nil ((nil rear-nonsticky nil 860 . 861) (#("
" 0 1 (fontified nil)) . -958) (859 . 959)) nil (25935 42440 263996 250000) 0 nil])
([nil nil ((#("	go apiCfg.Worker(60);
" 0 1 (fontified t rear-nonsticky t) 1 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t) 4 10 (fontified t face tree-sitter-hl-face:variable) 10 11 (fontified t) 11 17 (fontified t face (tree-sitter-hl-face:function\.method\.call tree-sitter-hl-face:property)) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 20 (fontified t face tree-sitter-hl-face:number) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 23 (fontified t)) . 860) (undo-tree-id89 . -22) (undo-tree-id90 . -23) (undo-tree-id91 . -1) (undo-tree-id92 . -11) (undo-tree-id93 . -17)) nil (25935 42440 263991 391000) 0 nil])
([nil nil ((64 . 66) (t 25935 42440 272366 292000)) nil (25935 42460 990438 156000) 0 nil])
([nil nil ((67 . 74) (66 . 68) (#("\"" 0 1 (fontified nil)) . -66) (66 . 67)) nil (25935 42460 990431 744000) 0 nil])
([nil nil ((295 . 297) (t 25935 42460 998962 626000)) nil (25935 43014 524356 985000) 0 nil])
([nil nil ((nil rear-nonsticky nil 297 . 298) (#("
" 0 1 (fontified nil)) . -683) (297 . 684)) nil (25935 43014 524355 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 296 . 297) (#("
" 0 1 (fontified nil)) . -371) (296 . 372)) nil (25935 43014 524347 958000) 0 nil])
([nil nil ((75 . 77) (t 25935 43014 624357 441000)) nil (25935 43175 977548 802000) 0 nil])
([nil nil ((78 . 85) (77 . 79) (#("\"" 0 1 (fontified nil)) . -77) (77 . 78)) nil (25935 43175 977542 100000) 0 nil])
([nil nil ((306 . 308) (t 25935 43175 985006 525000)) nil (25935 43225 419279 251000) 0 nil])
([nil nil ((236 . 238)) nil (25935 43225 419278 169000) 0 nil])
([nil nil ((nil rear-nonsticky nil 237 . 238) (#("
" 0 1 (fontified nil)) . -513) (237 . 514)) nil (25935 43225 419276 877000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 237) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1)) nil (25935 43225 419275 144000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 584) (undo-tree-id99 . -1)) nil (25935 43225 419269 643000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 584) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1)) nil (25935 43225 419264 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1622 . 1623) (#("
" 0 1 (fontified nil)) . -1703) (1621 . 1704) (t 25935 43225 426780 453000)) nil (25935 43379 58674 184000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1621) (undo-tree-id107 . -1)) nil (25935 43379 58669 806000) 0 nil])
([nil nil ((86 . 88) (t 25935 43379 66798 188000)) nil (25935 43602 299526 293000) 0 nil])
([nil nil ((89 . 94) (88 . 90) (#("\"" 0 1 (fontified nil)) . -88) (88 . 89)) nil (25935 43602 299525 31000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face tree-sitter-hl-face:string)) . -90) (undo-tree-id118 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -91) (undo-tree-id119 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -92) (undo-tree-id120 . -1) (#("w" 0 1 (fontified t face tree-sitter-hl-face:string)) . -93) (undo-tree-id121 . -1) 94) nil (25935 43602 299522 636000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -89) (undo-tree-id117 . -1) 90) nil (25935 43602 299518 378000) 0 nil])
([nil nil ((89 . 97)) nil (25935 43602 299516 485000) 0 nil])
([nil nil ((apply yas--snippet-revive 89 98 #s(yas--snippet nil nil nil 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 5 nil nil nil nil)) (89 . 98) (#("thisweek/" 0 9 (fontified nil)) . 89) (89 . 98) (#("thisweek" 0 8 (fontified nil)) . 89) (89 . 97) (#("thisweek/" 0 9 (fontified nil)) . -89) (89 . 98) (#("thisweek" 0 8 (fontified t face tree-sitter-hl-face:string)) . -89) (undo-tree-id115 . -8) (undo-tree-id116 . -8) 97) nil (25935 43602 299514 892000) 0 nil])
([nil nil ((98 . 112)) nil (25935 43602 299510 604000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -110) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -111) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 112) nil (25935 43602 299508 951000) 0 nil])
([nil nil ((110 . 112)) nil (25935 43602 299484 605000) 0 nil])
([nil nil ((112 . 118) (t 25935 43602 400794 139000)) nil (25935 43698 619833 60000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -111) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -112) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:string)) . -113) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -114) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -115) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -116) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -117) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 118) nil (25935 43698 619830 595000) 0 nil])
([nil nil ((111 . 112)) nil (25935 43698 619803 414000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -91) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -92) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("w" 0 1 (fontified t face tree-sitter-hl-face:string)) . -93) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -94) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -95) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("k" 0 1 (fontified t face tree-sitter-hl-face:string)) . -96) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -97) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -98) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -99) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -100) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -101) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -102) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -103) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -104) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -105) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -106) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:string)) . -107) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -108) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -109) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -110) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -111) (undo-tree-id315 . -1) 112 (t 25935 43698 628776 444000)) nil (25935 43757 468120 683000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -89) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:string)) . -90) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 91) nil (25935 43757 467873 802000) 0 nil])
([nil nil ((89 . 90)) nil (25935 43757 467868 221000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -89) (undo-tree-id143 . -1) 90) nil (25935 43757 467867 650000) 0 nil])
([nil nil ((89 . 95)) nil (25935 43757 467866 57000) 0 nil])
([nil nil ((95 . 101)) nil (25935 43757 467865 717000) 0 nil])
([nil nil ((apply yas--snippet-revive 98 106 #s(yas--snippet nil nil nil 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 6 nil nil nil nil)) (98 . 106) (#("backend/" 0 8 (fontified nil)) . 98) (98 . 106) (#("bac" 0 3 (fontified nil)) . 98) (98 . 101) (#("backend/" 0 8 (fontified nil)) . -98) (98 . 106) (#("bac" 0 3 (fontified t face tree-sitter-hl-face:string)) . -98) (undo-tree-id141 . -3) (undo-tree-id142 . -3) 101) nil (25935 43757 467864 615000) 0 nil])
([nil nil ((106 . 110)) nil (25935 43757 467862 461000) 0 nil])
([nil nil ((apply yas--snippet-revive 106 115 #s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 7 nil nil nil nil)) (106 . 115) (#("internal/" 0 9 (fontified nil)) . 106) (106 . 115) (#("inte" 0 4 (fontified nil)) . 106) (106 . 110) (#("internal/" 0 9 (fontified nil)) . -106) (106 . 115) (#("inte" 0 4 (fontified t face tree-sitter-hl-face:string)) . -106) (undo-tree-id139 . -4) (undo-tree-id140 . -4) 110) nil (25935 43757 467860 497000) 0 nil])
([nil current ((115 . 120)) nil (25935 43757 467843 14000) 0 nil])
nil
