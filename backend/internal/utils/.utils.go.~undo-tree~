(undo-tree-save-format-version . 1)
"1247cfc70a9a9f44e5ac7a0e46b39b1dd3c81de9"
[nil nil nil nil (25935 43547 63804 714000) 0 nil]
([nil nil ((1 . 14) (t 25935 43501 962765 435000)) nil (25935 43547 63803 11000) 0 nil])
([nil nil ((apply yas--snippet-revive 9 14 #s(yas--snippet nil nil nil 4 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 4 nil nil nil nil)) (9 . 14) (#("utils" 0 5 (fontified nil)) . 9) (9 . 14) (#("utils" 0 5 (fontified nil)) . 9) (9 . 14) (#("utils" 0 5 (fontified t)) . -9) (undo-tree-id0 . -5) (undo-tree-id1 . -5) 14) nil (25935 43547 63800 817000) 0 nil])
([nil nil ((14 . 16)) nil (25935 43547 63749 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16 . 17) (#("
" 0 1 (fontified nil)) . -766) (16 . 767)) nil (25935 43547 63748 258000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 16)) nil (25935 43547 63746 325000) 0 nil])
([nil nil ((765 . 766)) nil (25935 43547 63740 514000) 0 nil])
([nil nil ((122 . 124) (t 25938 25783 595275 947000)) nil (25943 49432 752929 97000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -122) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("
" 0 1 (fontified t)) . -123) (undo-tree-id20 . -1) (undo-tree-id21 . 1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 124) nil (25943 49432 752927 26000) 0 nil])
([nil nil ((62 . 64)) nil (25943 49432 752855 250000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64 . 65) (#("
" 0 1 (fontified nil)) . -134) (64 . 135)) nil (25943 49432 752851 196000) 0 nil])
([nil nil ((60 . 62) (t 25943 49432 762715 350000)) nil (25943 49551 486917 544000) 0 nil])
([nil nil ((63 . 67) (62 . 64) (#("\"" 0 1 (fontified nil)) . -62) (62 . 63)) nil (25943 49551 486916 760000) 0 nil])
([nil nil ((67 . 75)) nil (25943 49551 486915 752000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -63) (undo-tree-id60 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -64) (undo-tree-id61 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -65) (undo-tree-id62 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -66) (undo-tree-id63 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -67) (undo-tree-id64 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -68) (undo-tree-id65 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -69) (undo-tree-id66 . -1) (#("l" 0 1 (fontified t face tree-sitter-hl-face:string)) . -70) (undo-tree-id67 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -71) (undo-tree-id68 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -72) (undo-tree-id69 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -73) (undo-tree-id70 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -74) (undo-tree-id71 . -1) 75) nil (25943 49551 486913 954000) 0 nil])
([nil nil ((63 . 67)) nil (25943 49551 486905 471000) 0 nil])
([nil nil ((apply yas--snippet-revive 63 72 #s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 0 nil nil nil nil)) (63 . 72) (#("database/" 0 9 (fontified nil)) . 63) (63 . 72) (#("data" 0 4 (fontified nil)) . 63) (63 . 67) (#("database/" 0 9 (fontified nil)) . -63) (63 . 72) (#("data" 0 4 (fontified t face tree-sitter-hl-face:string)) . -63) (undo-tree-id58 . -4) (undo-tree-id59 . -4) 67) nil (25943 49551 486904 131000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -71) (undo-tree-id57 . -1) 72) nil (25943 49551 486901 221000) 0 nil])
([nil nil ((71 . 72)) nil (25943 49551 486899 974000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -71) (undo-tree-id56 . -1) 72) nil (25943 49551 486899 172000) 0 nil])
([nil nil ((71 . 76)) nil (25943 49551 486897 729000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -72) (undo-tree-id52 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -73) (undo-tree-id53 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -74) (undo-tree-id54 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -75) (undo-tree-id55 . -1) 76) nil (25943 49551 486896 551000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face tree-sitter-hl-face:string)) . -71) (undo-tree-id51 . -1) 72) nil (25943 49551 486893 50000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face tree-sitter-hl-face:string)) . -63) (undo-tree-id43 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -64) (undo-tree-id44 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -65) (undo-tree-id45 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -66) (undo-tree-id46 . -1) (#("b" 0 1 (fontified t face tree-sitter-hl-face:string)) . -67) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:string)) . -68) (undo-tree-id48 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -69) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -70) (undo-tree-id50 . -1) 71) nil (25943 49551 486890 686000) 0 nil])
([nil nil ((63 . 67)) nil (25943 49551 486885 55000) 0 nil])
([nil nil ((apply yas--snippet-revive 63 72 #s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 1 nil nil nil nil)) (63 . 72) (#("thisweek/" 0 9 (fontified nil)) . 63) (63 . 72) (#("this" 0 4 (fontified nil)) . 63) (63 . 67) (#("thisweek/" 0 9 (fontified nil)) . -63) (63 . 72) (#("this" 0 4 (fontified t face tree-sitter-hl-face:string)) . -63) (undo-tree-id41 . -4) (undo-tree-id42 . -4) 67) nil (25943 49551 486883 969000) 0 nil])
([nil nil ((72 . 77)) nil (25943 49551 486880 783000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face tree-sitter-hl-face:string)) . -72) (undo-tree-id36 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -73) (undo-tree-id37 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -74) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:string)) . -75) (undo-tree-id39 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -76) (undo-tree-id40 . -1) 77) nil (25943 49551 486879 433000) 0 nil])
([nil nil ((72 . 76)) nil (25943 49551 486875 333000) 0 nil])
([nil nil ((apply yas--snippet-revive 72 80 #s(yas--snippet nil nil nil 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 2 nil nil nil nil)) (72 . 80) (#("backend/" 0 8 (fontified nil)) . 72) (72 . 80) (#("back" 0 4 (fontified nil)) . 72) (72 . 76) (#("backend/" 0 8 (fontified nil)) . -72) (72 . 80) (#("back" 0 4 (fontified t face tree-sitter-hl-face:string)) . -72) (undo-tree-id34 . -4) (undo-tree-id35 . -4) 76) nil (25943 49551 486874 59000) 0 nil])
([nil nil ((80 . 83)) nil (25943 49551 486871 238000) 0 nil])
([nil nil ((apply yas--snippet-revive 80 89 #s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 3 nil nil nil nil)) (80 . 89) (#("internal/" 0 9 (fontified nil)) . 80) (80 . 89) (#("int" 0 3 (fontified nil)) . 80) (80 . 83) (#("internal/" 0 9 (fontified nil)) . -80) (80 . 89) (#("int" 0 3 (fontified t face tree-sitter-hl-face:string)) . -80) (undo-tree-id32 . -3) (undo-tree-id33 . -3) 83) nil (25943 49551 486870 70000) 0 nil])
([nil nil ((89 . 93)) nil (25943 49551 486867 389000) 0 nil])
([nil nil ((apply yas--snippet-revive 89 97 #s(yas--snippet nil nil nil 4 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 4 nil nil nil nil)) (89 . 97) (#("database" 0 8 (fontified nil)) . 89) (89 . 97) (#("data" 0 4 (fontified nil)) . 89) (89 . 93) (#("database" 0 8 (fontified nil)) . -89) (89 . 97) (#("data" 0 4 (fontified t face tree-sitter-hl-face:string)) . -89) (undo-tree-id30 . -4) (undo-tree-id31 . -4) 93) nil (25943 49551 486865 968000) 0 nil])
([nil nil ((98 . 100)) nil (25943 49551 486856 273000) 0 nil])
([nil nil ((101 . 103) (100 . 102) (#("\"" 0 1 (fontified nil)) . -100) (100 . 101)) nil (25943 49551 486855 272000) 0 nil])
([nil nil ((103 . 108)) nil (25943 49551 486851 696000) 0 nil])
([nil nil ((119 . 121) (#("Api" 0 1 (fontified t face tree-sitter-hl-face:type) 1 3 (fontified t face tree-sitter-hl-face:type)) . 119) 127 (t 25943 49551 497313 644000)) nil (25943 49645 106871 779000) 0 nil])
([nil current ((161 . 164) (#("ctx" 0 3 (fontified t face tree-sitter-hl-face:property)) . 161) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 162 (t 25943 49645 117596 472000)) nil (25943 54877 856020 301000) 0 nil])
nil
